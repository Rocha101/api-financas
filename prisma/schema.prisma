generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  username     String?
  password     String
  charts       Chart[]
  budgets      Budget[]
  transactions Transaction[]
  goals        Goal[]
  reminders    Reminder[]
}

model Budget {
  id        Int      @id @default(autoincrement())
  category  String
  limit     Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Transaction {
  id          Int      @id @default(autoincrement())
  type        String // "expense" or "income" or other types
  amount      Int
  description String?
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Goal {
  id           Int      @id @default(autoincrement())
  name         String
  targetAmount Int
  progress     Int
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
}

model Reminder {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  date        DateTime
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Chart {
  id        Int      @id @default(autoincrement())
  name      String
  type      String
  data      String
  key       String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}
